What happens when you initialize a repository? Why do you need to do it?
An empty record of that repository is created. You will have to manually make the first commit.

How is the staging area different from the working directory and the repository? What value do you think it
offers?
The staging area isn't where you do things (like edit) to a file, but is more like a holding area for future commits.
It shows you what you're working on 'right now', as far as git is concerned.

How can you use the staging area to make sure you hve one commit per
logical change?
You can make sure you only put one logical change in the staging area at a time
by using 'git diff' without any arguments.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Can keep parallel versions of a program, can develop features that aren't ready
for production code yet, with meaningful names, can know what different things
are being worked on.

How do the diagrams help you visualize the branch structure?
picture = 1000 * word

What is the result of  merging two branches together? Why do we represent it on
the diagram the way we do?
The result is one combined branch, with the sum of the changes of the two
branches. On the diagram, it's represented as diverging and converging branches
because that's a good visual analogy for what's happening.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Pros: much faster for routine merges of things that don't affect each other; big
time and tedium saver
Cons: could create unwanted merges; no tracking of fine detail of merges.

