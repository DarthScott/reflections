How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It isolated the differences for visibility.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could see changes that were made, and in what order, and possibly what didn't work and was therefore changed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: no unwanted (aka, intermediate) work saved inadvertently
    Cons: may lose unsaved work

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Saving multiples allows editing several files together and then uploading. Also allows better 'on demand' control of
what gets saved.
    Single file saving allows for easier autosaves.

How can you use the commands git log and git diff to view the history of files?

    Use log to get all the versions of a file, diff to compare them.

How might using version control make you more confident to make changes that
could break something?

    Easier to find the 'unbroken' version.

Now that you have your workspace set up, what do you want to try using Git for?

    Nanodegree stuff.
